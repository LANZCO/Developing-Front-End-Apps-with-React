# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JclGQZ1iR7KSB-3F_rUu7GOLQNA5SkQS
"""

!curl -sL https://deb.nodesource.com/setup_14.x | bash -
!apt-get install -y nodejs

!mkdir my_plant_shop
!cd my_plant_shop
!npm init -y

!npm install react react-dom redux react-redux

!mkdir my_plant_shop
!cd my_plant_shop

!npm init -y

!npm install react react-dom react-router-dom redux react-redux

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/App.js
# import React from 'react';
# import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
# import Header from './components/Header';
# import ProductListing from './components/ProductListing';
# import ShoppingCart from './components/ShoppingCart';
# 
# function App() {
#   return (
#     <Router>
#       <Header />
#       <Switch>
#         <Route path="/" exact>
#           <LandingPage />
#         </Route>
#         <Route path="/products">
#           <ProductListing />
#         </Route>
#         <Route path="/cart">
#           <ShoppingCart />
#         </Route>
#       </Switch>
#     </Router>
#   );
# }
# 
# function LandingPage() {
#   return (
#     <div>
#       <h1>Welcome to Our Plant Shop!</h1>
#       <p>Discover unique houseplants and bring nature into your home.</p>
#       <button>Get Started</button>
#     </div>
#   );
# }
# 
# export default App;

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/components/Header.js
# import React from 'react';
# import { useSelector, useDispatch } from 'react-redux';
# import { Link } from 'react-router-dom';
# 
# const Header = () => {
#   const { totalItems } = useSelector(state => state.cart);
#   const dispatch = useDispatch();
# 
#   return (
#     <header>
#       <nav>
#         <div>
#           <Link to="/">Home</Link>
#           <Link to="/products">Products</Link>
#           <Link to="/cart">Cart</Link>
#         </div>
#         <div>
#           <span>Cart: {totalItems}</span>
#         </div>
#       </nav>
#     </header>
#   );
# 
# export default Header;

"""3. 创建 ProductListing 组件:"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/components/ProductListing.js
# import React from 'react';
# import { useDispatch } from 'react-redux';
# import { addItemToCart } from '../actions/cartActions';
# 
# const ProductListing = () => {
#   const dispatch = useDispatch();
# 
#   const plants = [
#     { id: 1, name: 'Fern', price: 15, thumbnail: 'fern.jpg' },
#     { id: 2, name: 'Cactus', price: 20, thumbnail: 'cactus.jpg' },
#     { id: 3, name: 'Ivy', price: 10, thumbnail: 'ivy.jpg' },
#     { id: 4, name: 'Pothos', price: 12, thumbnail: 'pothos.jpg' },
#     { id: 5, name: 'Snake Plant', price: 18, thumbnail: 'snake-plant.jpg' },
#     { id: 6, name: 'Spider Plant', price: 16, thumbnail: 'spider-plant.jpg' }
#   ];
# 
#   return (
#     <div>
#       <h1>Product Listing</h1>
#       <div>
#         {plants.map(plant => (
#           <div key={plant.id}>
#             <img src={plant.thumbnail} alt={plant.name} />
#             <h2>{plant.name}</h2>
#             <p>${plant.price}</p>
#             <button onClick={() => dispatch(addItemToCart(plant))}>Add to Cart</button>
#           </div>
#         ))}
#       </div>
#     </div>
#   );
# 
# export default ProductListing;

"""4. 创建 ShoppingCart 组件:"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/components/ShoppingCart.js
# import React from 'react';
# import { useSelector, useDispatch } from 'react-redux';
# import { removeItemFromCart } from '../actions/cartActions';
# 
# const ShoppingCart = () => {
#   const { items, totalItems, totalCost } = useSelector(state => state.cart);
#   const dispatch = useDispatch();
# 
#   return (
#     <div>
#       <h1>Shopping Cart</h1>
#       <p>Total Items: {totalItems}</p>
#       <p>Total Cost: ${totalCost}</p>
#       <button>Checkout (Coming Soon)</button>
#       <button onClick={() => window.location.href = '/products'}>Continue Shopping</button>
#       {items.map(item => (
#         <div key={item.id}>
#           <img src={item.thumbnail} alt={item.name} />
#           <h2>{item.name}</h2>
#           <p>${item.price}</p>
#           <button onClick={() => dispatch(removeItemFromCart(item.id))}>-</button>
#           <button>+</button>
#           <button onClick={() => dispatch(removeItemFromCart(item.id))}>Delete</button>
#         </div>
#       ))}
#     </div>
#   );
# 
# export default ShoppingCart;

"""步骤 3: 创建 Redux Store 和 Reducers
创建 Redux store:
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/store/index.js
# import { createStore } from 'redux';
# import rootReducer from '../reducers';
# 
# const store = createStore(rootReducer);
# 
# export default store;

"""2. 创建 reducers:"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/reducers/index.js
# import { combineReducers } from 'redux';
# import cartReducer from './cartReducer';
# 
# const rootReducer = combineReducers({
#   cart: cartReducer
# });
# 
# export default rootReducer;

"""3.创建 cart reducer:"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/reducers/cartReducer.js
# const initialState = {
#   items: [],
#   totalItems: 0,
#   totalCost: 0
# };
# 
# const cartReducer = (state = initialState, action) => {
#   switch (action.type) {
#     case 'ADD_ITEM':
#       return {
#         ...state,
#         items: [...state.items, action.payload],
#         totalItems: state.totalItems + 1,
#         totalCost: state.totalCost + action.payload.price
#       };
#     case 'REMOVE_ITEM':
#       const index = state.items.findIndex(item => item.id === action.payload.id);
#       const newTotalCost = state.totalCost - state.items[index].price;
#       const newTotalItems = state.totalItems - 1;
#       const newItems = [...state.items];
#       newItems.splice(index, 1);
#       return {
#         ...state,
#         items: newItems,
#         totalItems: newTotalItems,
#         totalCost: newTotalCost
#       };
#     default:
#       return state;
#   }
# };
# 
# export default cartReducer;

"""步骤 4: 创建 Actions
创建 cart actions:
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile src/actions/cartActions.js
# export const addItemToCart = item => ({
#   type: 'ADD_ITEM',
#   payload: item
# });
# 
# export const removeItemFromCart = itemId => ({
#   type: 'REMOVE_ITEM',
#   payload: { id: itemId }
# });

"""步骤 5: 运行你的应用
运行你的应用
"""

!cd my_plant_shop
!npm install
!npm run start